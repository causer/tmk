@model IEnumerable<Telemedicine.Web.Areas.Patient.Models.DoctorViewModel>
@{
    ViewBag.Title = "Консультация";
}

<h2 class="page-header">Консультация</h2>

@foreach (var doctor in Model)
{
    <div class="panel list-doctor-panel">
        <ul class="list-inline-responsive">
            <li class="list-doctor-panel-1"><img class="img-circle doctor-panel-img" src="https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQs-y62_LeI-lJ7kHcTp3ir74IWFXXUiNj04BCPzm2aK-dcdo2W" height="60" width="60" /></li>
            <li><h4 style="line-height: normal">@doctor.FIO <small> <br /> @doctor.Specialization</small></h4></li>
            <li class="list-doctor-panel-3">
                <h4 class="doctor-status-text" data-id="@doctor.Id">@doctor.Status</h4>
            </li>
            <li class="list-doctor-panel-4">
                <p>
                    <div class="btn-group pull-right doctor-panel-btn-group">
                        <a class="btn btn-primary" data-toggle="modal" data-target="#appointmentModalDialog" href="@Url.Action("Appointment", new {id = doctor.Id})" title="Записаться">
                            Записаться
                        </a>
                        @if (doctor.CanStartChat)
                        {
                            <a class="btn btn-success start-chat-btn" data-id="@doctor.Id" data-toggle="modal" data-target="#waitDoctorAnswerDialog" href="@Url.Action("StartDialog", new {id = doctor.Id})" title="Начать чат">
                                Консультация
                            </a>
                        }
                        else
                        {
                            <a class="btn btn-success start-chat-btn disabled" data-id="@doctor.Id" data-toggle="modal" data-target="#waitDoctorAnswerDialog" href="@Url.Action("StartDialog", new {id = doctor.Id})" title="Начать чат">
                                Консультация
                            </a>
                        }
                    </div>
                </p>
            </li>
        </ul>
    </div>
}

<div class="modal fade" id="appointmentModalDialog">
    <div class="modal-dialog">
        <div class="modal-content">
        </div>
    </div>
</div>
<div class="modal fade" id="waitDoctorAnswerDialog">
    <div class="modal-dialog">
        <div class="modal-content">
        </div>
    </div>
</div>

<div class="modal fade" id="doctorDeclineCall">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Уведомление</h4>
            </div>
            <div class="modal-body">
                <p>К сожалению доктор отклонил ваш запрос на консультацию, вы можете записаться к доктору на прием или связаться с дежурным доктором.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">OK</button>
            </div>
        </div>
    </div>
</div>



@section scripts {
    <script>
        $(function () {
            $('#waitDoctorAnswerDialog').on('hidden.bs.modal', function () {
                $('#callToDoctorBtn').button('reset');
            });

            signalHub.client.onAcceptCall = function (conversationId) {
                window.location.href = '@Url.Action("Open", "Conversation")/' + conversationId;
            };

            signalHub.client.onDeclineCall = function () {
                console.warn('Call declined by peer.');
                $('#waitDoctorAnswerDialog').modal('hide');
                $('#doctorDeclineCall').modal('show');
            };

            signalHub.client.onDoctorChangeStatus = function (status) {
                $('.doctor-status-text').each(function () {
                    var id = $(this).data('id');
                    if (id == status.DoctorId) {
                        $(this).html(status.StatusText);
                        var el = $(this);
                        el.removeClass('text-danger');
                        el.removeClass('text-success');
                        el.removeClass('text-info');

                        if (status.StatusName == "Busy") {
                            el.addClass('text-danger');
                        }
                        if (status.StatusName == "Available") {
                            el.addClass('text-success');
                        }
                        if (status.StatusName == "Duty") {
                            el.addClass('text-success');
                        }
                        if (status.StatusName == "VideoChat") {
                            el.addClass('text-info');
                        }
                    }
                });
                $('.start-chat-btn').each(function () {
                    var id = $(this).data('id');
                    if (id == status.DoctorId) {
                        if (status.CanCall) {
                            $(this).removeClass('disabled');
                        } else {
                            $(this).addClass('disabled');
                        }
                    }
                });
            };
        });

        function callToDoctor(userId) {
            signalHub.server.startCall(userId).done(function (result) {
                if (result.Success) {
                    console.info('Call started, userId: ' + userId);
                    $('#callToDoctorBtn').button('loading');
                    groupId = result.GroupId;
                } else {
                    console.warn('Call not started, userId: ' + userId + ' is not connected!');
                    $('#waitDoctorAnswerDialog').modal('hide');
                    toastr.warning('К сожалению врач не подключен на данный момент!');
                }

            }).fail(function (error) {
                console.error('Invocation of StartCall failed: ' + error);
            });
        }

        function cancelCall() {
            if (groupId) {
                signalHub.server.cancelCall(groupId).done(function () {
                    console.info('Call cancelled by self');
                }).fail(function (error) {
                    console.error('Invocation of CancelCall failed: ' + error);
                });
                groupId = null;
            }
        }
    </script>
}
