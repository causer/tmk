@model IEnumerable<Telemedicine.Web.Areas.Doctor.Models.AppointmentViewModel>
@{
    ViewBag.Title = "Главная";
    Layout = "~/Views/Shared/_Layout3.cshtml";
}
 
<div class="row page-header container-fluid"  ng-controller="DoctorStatusController as viewModel">
    <div class="pull-left currenttime">
        Время: <span id="currenttime"></span>
    </div>
    <div class="pull-right status-select">
        Текущий статус
        <span class="status" ng-class="{'active':(!viewModel.doctorIsAvailable)}" style="margin-left: 15px">Занят</span>
        <span class="status-selector">
            <input type="checkbox" ng-checked="viewModel.doctorIsAvailable" />
            <label ng-click="viewModel.changeStatus()"></label>
        </span>
        <span class="status"  ng-class="{'active':viewModel.doctorIsAvailable}">Готов консультировать</span>
    </div>
</div>
<div style="display: flex;" class="doctormainpage"  ng-controller="DoctorTimelineController as viewModel" data-id="@ViewBag.DoctorId">
    <div class="panel panel-default text-center" style="width: 292px;">
        <div id="calendar" class="panel-body"></div>
        <div id="currentdate" class="text-center"></div>
        <hr/>

        <div class="balance-info">
            <div class="text">Ваш баланс</div>
            <div class="summa">1486</div>
            <a href="@Url.Action("Balance")" class="btn btn-primary rounded">Подробнее</a>
        </div>
    </div>
    <div class="container-fluid" style="flex: 1">
        <div style="flex: 1; flex-wrap: wrap" class="timeline">
            <div class="hour" ng-repeat="hour in viewModel.currentTimeLine.Hours" ng-click="viewModel.selectHour(hour.Hour)" data-hourtype="">
                <div class="info plan panel-default panel " ng-class="{'notworking':(hour.HourType==1), 'working':(hour.HourType==0) }"  >
                    <div class="human" ng-repeat="item in viewModel.range(hour.PatientsCount) track by $index"></div> 
                </div>
                <div class="time font-bold text-center">{{hour.Hour}}</div> 
            </div>
            
        </div>
        <div>
            @*<button type="button" class="btn btn-default rounded">Редактировать расписание</button>*@
        </div>
    </div>
</div>
<style>

</style>
<div class="row">
    <div class="col-md-4">
        @*        @Html.Action("GetStatus", "Status")*@
    </div>
</div> 


@Ajax.ActionLink("Ссылка при нажатии на которую происходит обновление таблицы записей на текущий день", "PatientListOnCurrentDay","Home", new AjaxOptions() { UpdateTargetId = "patientListOnCurrentDay", HttpMethod = "Get" },
    new {id= "patientListOnCurrentDayLink", style="display: none;" }) 
<div style="height: calc(100% - 600px);min-height:200px" id="patientListOnCurrentDay">
    
</div>
<div class="modal fade" id="CreateEvent"  role="dialog" aria-labelledby="CreateEventLabel">
    <div class="modal-dialog  modal-sm" role="document">
        <div class="modal-content">

        </div>
    </div>
</div>

<div class="modal fade" id="addEventDialog">
    <div class="modal-dialog addTimeSpanEventDialog">
        <div  class="modal-content">

        </div>
    </div>
</div> 

<a style="display: none;" class="btn btn-primary rounded" data-toggle="modal" id="createEventLink" data-target="#CreateEvent" href="@Url.Action("AddCalendarEvent")">
</a>

@section scripts
{
    <script type="text/javascript">
        var EventStartDate;
        var EventDurationVal;
        var currentYear = null, currentMonth = null;

       /* var dates = [
            { "Class": "planned", "Date": "1995-06-23" },
            { "Class": "planned", "Date": "2014-05-01" },
            { "Class": "fault", "Date": "2015-08-16" },
            { "Class": "planned", "Date": "2015-08-08" },
            { "Class": "planned", "Date": "2015-08-03" }
        ];
        */
        function availableHour() {
            var controller = angular.element(document.getElementsByClassName("doctormainpage")).controller();
            controller.availableHour();
            $('.hour .info').each(function() {
                var e = $("body");
                if (!$(this).is(e.target) && $(this).has(e.target).length === 0 && $('.popover').has(e.target).length === 0) {
                    $(this).popover('destroy');
                }
            });
        }

        function unavailableHour() {
            var controller = angular.element(document.getElementsByClassName("doctormainpage")).controller();
            controller.unavailableHour();

            $('.hour .info').each(function() {
                var e = $("body");
                if (!$(this).is(e.target) && $(this).has(e.target).length === 0 && $('.popover').has(e.target).length === 0) {
                    $(this).popover('destroy');
                }
            });
        }

        function clearHour() {
            var controller = angular.element(document.getElementsByClassName("doctormainpage")).controller();
            controller.clearHour();

            $('.hour .info').each(function() {
                var e = $("body");
                if (!$(this).is(e.target) && $(this).has(e.target).length === 0 && $('.popover').has(e.target).length === 0) {
                    $(this).popover('destroy');
                }
            });
            document.getElementById("patientListOnCurrentDayLink").click();

        }

        function updateDatetimepickerMarkers() {
            if (currentYear == null) {
                var currentDate = $('#calendar').data("DateTimePicker").date();
                currentYear = new Date(currentDate).getFullYear();
                currentMonth = new Date(currentDate).getMonth() + 1;
            }
            console.log("updateDatetimepickerMarkers");

            $.get("@Url.Action("GetCalendarMarkers", "Home")", { year: currentYear, month: currentMonth }).done(function (data) {  
                
                $('#calendar').data("DateTimePicker").options({ highlights: JSON.parse(data) });
                $('#calendar').data("DateTimePicker").options({ defaultDate: new Date(currentYear, currentMonth-1, 1) }); 
            });
        };

        function showMyEvents(that) {
            that = $(that);
            var controller = angular.element($(".doctormainpage")).controller();
            controller.showMyEvents();
        }

        
        $('#currentdate').html(moment().format('DD MMMM, dd'));
        $('.timeline').on('click', '.hour .info:not(.selected)', function() {
            $(this).toggleClass('selected', true);

            if ($(this).hasClass("working") && $(this).children().hasClass('human')) {
                $(this).popover({
                    container: '.main-container',
                    title: 'Назначена запись на прием',
                    content: '<div><div class=actions><button onclick="showMyEvents(this)">Просмотреть подробнее</button></div><div class=actions><button onclick="clearHour()">Отменить все</button></div></div>',
                    placement: 'bottom',
                    html: true
                });

            }

            if ($(this).hasClass("working") && !$(this).children().hasClass('human')) {
                $(this).popover({
                    container: '.main-container',
                    title: 'Отмечено как приемные часы',
                    content: '<div><div class=actions><button onclick="clearHour()">Изменить</button></div></div>',
                    placement: 'bottom',
                    html: true
                });
            }

            if ($(this).hasClass("notworking")) {
                $(this).popover({
                    container: '.main-container',
                    title: 'Отмечено как нерабочее время',
                    content: '<div><div class=actions><button onclick="clearHour()">Изменить</button></div></div>',
                    placement: 'bottom',
                    html: true
                });
            }

            if (!$(this).hasClass("working") && !$(this).hasClass("notworking")) {

                $(this).popover({
                    container: '.main-container',
                    title: 'Отметить как',
                    content: '<div><div class=actions><button onclick="availableHour()">Приемные часы</button></div><div class=actions><button onclick="unavailableHour()">Нерабочее время</button></div></div>',
                    placement: 'bottom',
                    html: true
                });
            }

            $(this).data('bs.popover').tip().addClass('timeline-item').attr('data-hourtype', $(this).closest('.info').attr('data-hourtype'));
            $(this).popover('show');
            $(this).on('hidden.bs.popover', function() {
                $(this).toggleClass('selected', false);
                $(this).popover('destroy');
            });

        });

        $('#currenttime').text(moment().format('HH:mm:ss'));
        setInterval(function() {
            $('#currenttime').text(moment().format('HH:mm:ss'));
        }, 100);

        $('body').on('click', function(e) {
            $('.hour .info').each(function() {
                //the 'is' for buttons that trigger popups
                //the 'has' for icons within a button that triggers a popup
                if (!$(this).is(e.target) && $(this).has(e.target).length === 0 && $('.popover').has(e.target).length === 0) {
                    $(this).popover('destroy');
                }
            });
        });

        $(function () {

            $('#calendar').datetimepicker({
                format: 'YYYY-MM-dd',
                inline: true,
                locale: 'ru' 
            }).on('dp.change', function (e) {

                $('.hour .info').each(function () {
                    var bodyItem = $("body");
                    if (!$(this).is(bodyItem.target) && $(this).has(bodyItem.target).length === 0 && $('.popover').has(bodyItem.target).length === 0) {
                        $(this).popover('destroy');
                    }
                });

                $('#currentdate').html(e.date.format('DD MMM, dd'));
                var controller = angular.element(document.getElementsByClassName("doctormainpage")).controller();
                controller.changeDate(new Date(e.date));



            }).on('dp.error', function (e) {
                console.log(e);
            }).on('dp.update', function (e) { 
                currentMonth = e.viewDate.format('M');
                updateDatetimepickerMarkers();
            });

     /*       $('[data-action="previous"]').click(function () {
                currentMonth--;
                updateDatetimepickerMarkers();
            });


            $(".next").click(function () {
                currentMonth++;
                updateDatetimepickerMarkers();
            });*/

            updateDatetimepickerMarkers();

            $(".dropdown-menu li a").click(function() {
                $("#selectedMonth").text($(this).text());

            });

            var months = [
                "Январь", "Февраль", "Март", "Апрель", "Май", "Июнь",
                "Июль", "Август", "Сентябрь", "Октябрь", "Ноябрь", "Декабрь"
            ];

            $("#selectedMonth").text(months[(new Date()).getMonth()]);

            $("#selectedMonth").bind('DOMSubtreeModified', function() {
                if ($.inArray($("#selectedMonth").text(), months) == -1)
                    $("#selectedMonth").text(months[(new Date()).getMonth()]);
            });
            /* $('#EventStart').datetimepicker({
                locale:'ru'
            });*/
            $.getJSON('@Url.Action("GetEvents", "Events")', "json", function(data) {
                /* $('#calendar').fullCalendar({
                    firstDay: moment().format('d'),
                    header: false,
                    views: {
                        week: {
                            smallTimeFormat: 'H:mm',
                        }
                    },
                    timeFormat: 'H:mm',
                    columnFormat: '<i1>dd</i1><i2>DD</i2><i3>MMMM</i3>',
                    lang: 'ru',
                    events: data,
                    defaultView: "agendaWeek",
                    minTime: '07:00',
                    maxTime: '21:00',
                    height: 400,
                    allDaySlot: false,
                    axisWidth: '100px',
                    selectable: true,
                    selectHelper: true,
                    eventLimit: true,
                    slotDuration: '00:15:00',
                    select: function (start, end) {
                        $("#createEventLink").click();
                        //$('#CreateEvent').modal('toggle');
                        EventStartDate = start;
                        EventDurationVal = (end - start) / 60000;
                        //$('#EventStart').data('DateTimePicker').date(start);
                        //$('#EventDuration').val((end - start) / 60000);
                        //$('#EventDuration').change();
                        /*  var title = prompt('Наименование события:');
                        var eventData;
                        if (title) {
                            eventData = {
                                title: title,
                                start: start,
                                end: end
                            };
                            $('#calendar').fullCalendar('renderEvent', eventData, true); // stick? = true
                        }
                        $('#calendar').fullCalendar('unselect');#1#
                    },
                    //eventColor: '#3e67ae'
                });*/
            });

            //инициализация всплывающего окна дял добавления записи
            $("#beginDateDatetimePicker").datetimepicker({
                locale: 'ru'
            });
            $("#endDateDatetimePicker").datetimepicker({
                locale: 'ru'
            });
            $(".glyphicon-calendar").click(function() {
                $(this).parent().parent().find(".form-control").focus();
            });
            $('.dropdown-menu input, .dropdown-menu label').click(function(e) {
                e.stopPropagation();
            });

            $('#CreateEvent').on('shown.bs.modal', function() {
                var pickerTime = shiftTime(new Date(EventStartDate));

                $('#EventStart').datetimepicker({
                    locale: 'ru'
                });

                $('#EventStart').data('DateTimePicker').date(pickerTime);

                console.log(EventStartDate);
                console.log(EventDurationVal);
                $('#EventDuration').val(EventDurationVal);
                $('#EventDuration').change();
            });

            

        });

       

        function onAddSuccess() {
            $("#addEventDialog").modal('hide');
            window.location.href = '@Url.Action("Index", "Home")';
        }

        function onAddCalendarEventSuccess() {
            $("#CreateEvent").modal('hide');
            window.location.href = '@Url.Action("Index", "Home")';
        }

        function selectMonth(monthNumber) {
            var date = new Date();
            $('#calendar').fullCalendar('gotoDate', new Date(date.getFullYear(), monthNumber, 1));
        }

        function ArrowUp() {
            var d = $('#EventStart').data('DateTimePicker').date()._d;
            $('#EventStart').data('DateTimePicker').date(new Date(d.setDate(d.getDate() + 1)));
        };

        function ArrowDown() {
            var d = $('#EventStart').data('DateTimePicker').date()._d;
            $('#EventStart').data('DateTimePicker').date(new Date(d.setDate(d.getDate() - 1)));
        };

        function ArrowLeft() {
            var d = $('#EventStart').data('DateTimePicker').date()._d;
            $('#EventStart').data('DateTimePicker').date(new Date(d.setMinutes(d.getMinutes() - 15)));
        };

        function ArrowRight() {
            var d = $('#EventStart').data('DateTimePicker').date()._d;
            $('#EventStart').data('DateTimePicker').date(new Date(d.setMinutes(d.getMinutes() + 15)));
        };

        function shiftTime(date) {
            var minutes = date.getMinutes();
            var shift = minutes % 15;
            if (shift > 0) {
                var timeshift = 15 - shift;
                date.setMinutes(minutes + timeshift);
            }
            var utc = date.getTime() + (date.getTimezoneOffset() * 60000);
            return new Date(utc);
        }

    </script>
}